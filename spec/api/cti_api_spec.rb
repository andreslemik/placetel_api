=begin
#Placetel API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for PlacetelApi::CTIApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CTIApi' do
  before do
    # run before each test
    @api_instance = PlacetelApi::CTIApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CTIApi' do
    it 'should create an instance of CTIApi' do
      expect(@api_instance).to be_instance_of(PlacetelApi::CTIApi)
    end
  end

  # unit tests for get_cti_mac
  # Get config params
  # Get config params
  # @param params 
  # @param mac 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_cti_mac test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_answer
  # Answer
  # This method allows device to answer a ringing call with given call_id.
  # @param mac 
  # @param cti_mac_answer 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_answer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_blind_transfer
  # Blind transfer
  # This method allows to do a blind tranfser on the call specified by the call_id.
  # @param mac 
  # @param cti_mac_blind_transfer 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_blind_transfer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_complete_conference
  # Complete conference
  # This method allows to complete conference on the call specified by the call_id.
  # @param mac 
  # @param cti_mac_complete_conference 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_complete_conference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_complete_transfer
  # Complete transfer
  # This method allows to initiate the tranfser on the call specified by the call_id.
  # @param mac 
  # @param cti_mac_complete_transfer 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_complete_transfer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_decline
  # Decline
  # This method allows device to Decline the call specified by the call_id. 
  # @param mac 
  # @param cti_mac_decline 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_decline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_dial
  # Dial
  # This method initiates a new call.
  # @param mac 
  # @param cti_mac_dial 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_dial test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_dial_digit
  # Dial digit
  # This method initiates a new call.
  # @param mac 
  # @param cti_mac_dial_digit 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_dial_digit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_hangup
  # Hangup
  # This method allows device to end the call specified by the call_id.
  # @param mac 
  # @param cti_mac_hangup 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_hangup test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_hold
  # Hold
  # This method allows device to hold the call specified by the call_id.
  # @param mac 
  # @param cti_mac_hold 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_hold test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_resume
  # Resume
  # This method allows device to resume the call specified by the call_id.
  # @param mac 
  # @param cti_mac_resume 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_resume test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_send_dtmf_digits
  # Send DTMF Digits
  # This method allows to sendDTMFDigits on a current active call.
  # @param mac 
  # @param cti_mac_send_dtmf_digits 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_send_dtmf_digits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_start_conference
  # Start conference
  # This method allows to initiate conference on the call specified by the call_id.
  # @param mac 
  # @param cti_mac_start_conference 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_start_conference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cti_mac_start_transfer
  # Start transfer
  # This method allows to initiate the tranfser on the call specified by the call_id.
  # @param mac 
  # @param cti_mac_start_transfer 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_cti_mac_start_transfer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_cti_mac
  # Set config params
  # Set config params
  # @param mac 
  # @param cti 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'put_cti_mac test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
